generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id              Int       @id @default(autoincrement())
  name            String
  password        String
  phone           String
  role            Role?     @default(USER)
  email           String?
  createdAt       DateTime? @default(now())
  updatedAt       DateTime? @updatedAt
  active          Status?   @default(ACTIVE)
  products        product[] @relation("createdByUser")
  productsUpdated product[] @relation("updatedByUser")
  sales           sale[]    @relation("sellerSales")
}

model product {
  id            String        @id @default(uuid()) @db.Uuid
  name          String
  barCode       String
  price         Float
  createdAt     DateTime?     @default(now())
  updatedAt     DateTime?     @updatedAt
  active        Status        @default(ACTIVE)
  createdBy     Int
  updatedBy     Int
  createdByUser user          @relation("createdByUser", fields: [createdBy], references: [id])
  updatedByUser user          @relation("updatedByUser", fields: [updatedBy], references: [id])
  sales         saleProduct[]

  @@index([barCode])
}

model sale {
  id             String        @id @default(uuid()) @db.Uuid
  sellerId       Int
  paymentMethod  PaymentMethod
  total          Float
  amountReceived Float
  change         Float
  saleDate       DateTime      @default(now())
  status         SaleStatus    @default(PENDING)
  seller         user          @relation("sellerSales", fields: [sellerId], references: [id])
  saleProducts   saleProduct[]
}

model saleProduct {
  id        String  @id @default(uuid()) @db.Uuid
  saleId    String  @db.Uuid
  productId String  @db.Uuid
  quantity  Int
  product   product @relation(fields: [productId], references: [id])
  sale      sale    @relation(fields: [saleId], references: [id])
}

enum Role {
  SUPER_ADMIN
  ADMIN
  USER
}

enum Status {
  ACTIVE
  INACTIVE
}

enum PaymentMethod {
  CASH
  CREDIT_CARD
}

enum SaleStatus {
  PENDING
  CONCLUDED
  CANCELLED
}
